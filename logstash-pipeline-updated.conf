input {
   file {
       path => "/usr/share/data/ds_salaries.csv"
       start_position => "beginning"
       sincedb_path => "NULL"
        }
}
filter {
  csv {
    #separator => ","
    #skip_header => true
     columns => ["work_year","experience_level","employment_type","job_title","salary","salary_in_usd","employee_residence","company_location","company_size"]
  }

  mutate {
    convert => {
      "work_year" => "integer"
      "salary" => "integer"
      "salary_in_usd" => "integer"
    }
   }

  mutate {
    rename => {
      "work_year" =>"employed_year"
       }
    remove_field => ["experience_level","host","message","column9","column11","@version","column8","column10","company_size","employee_residence"]
    add_field => {
      "WORK-TYPE" => "Not specified"
      "INCOME-TYPE" => "icome"
      "AVERAGE-Salaray" => ""
      }
    }
  ruby {
    code => 'event.set("AVERAGE-Salaray",(event.get("salary") + event.get("salary_in_usd"))/2)'
  }
  if [salary] <= 100000 and [salary] > 50000 {
  mutate {
    update => {"INCOME-TYPE" => "MEDIUM-INCOME"}
  }
  }
  else if [salary] <=50000{
  mutate {
    update => {"INCOME-TYPE" => "LOW-INCOME"}
  }
  }
  else{
  mutate {
    update => {"INCOME-TYPE" => "HIGH-INCOME"}
  }
  }

  if [employment_type] == "CT" {
  mutate { 
    update => { "WORK-TYPE" => "CONTRACT_TIME" }
      }
     }
  else if [employment_type] == "FT" {
  mutate { 
    update => {"WORK-TYPE" => "FULL-TIME"}
      }
     }
  else if [employment_type] == "PT" {
  mutate { 
    update => {"WORK-TYPE" => "PART-TIME"}
      }
     }
  else if [employment_type] == "FL" {
  mutate { 
    gsub => ["employment_type","FL","NOT-TIME"]
      }
     }
  else {
  mutate { 
    update => {"WORK-TYPE" => "NOT SPECIFIC"}
      }
     } 
  ruby {
    code => "if event.get('job_title').nil?; event.cancel;end"
  }
  
}

output {
  elasticsearch {
    hosts => ["http://elasticsearch:9200"]
    index => "nijas10.logstash"
    user => "elastic"
    password => "nijas2012"
  }
  stdout {}
}
